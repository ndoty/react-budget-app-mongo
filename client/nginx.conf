# This is the Nginx configuration file used by the frontend service.

# Upstream server definitions
upstream backend_api {
  # The backend service name and port as defined in docker-compose.yml
  server backend:5000;
}

upstream backend_ws {
  # The backend service for WebSocket connections
  server backend:5000;
}

server {
  # Nginx will listen on port 3000 inside the container
  listen 3000;

  # --- API Reverse Proxy ---
  # Any request to /api/... will be forwarded to the backend API
  location /api/ {
    # --- CORS Preflight Request Handling ---
    # This block specifically handles the OPTIONS requests that browsers
    # send to check CORS permissions before sending the actual request.
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://budget.technickservices.com';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With';
        add_header 'Access-Control-Allow-Credentials' 'true';
        # Tell the browser that this preflight response is valid for 24 hours
        add_header 'Access-Control-Max-Age' 86400;
        # Return a 204 No Content response, which is the standard for successful preflight checks
        return 204;
    }

    # --- Standard Proxying ---
    # These headers are essential for passing information to your backend
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    proxy_set_header X-NginX-Proxy true;

    # Pass the request to the upstream backend service
    proxy_pass http://backend_api;
    proxy_redirect off;
  }

  # --- WebSocket Reverse Proxy ---
  # Any request to /ws will be forwarded for WebSocket connections
  location /ws {
    proxy_pass http://backend_ws;
    # These headers are required for WebSocket connections to work correctly
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
  }

  # --- Static File Serving ---
  # Serve the React application for all other requests
  location / {
    root /usr/share/nginx/html;
    try_files $uri /index.html;
  }
}

